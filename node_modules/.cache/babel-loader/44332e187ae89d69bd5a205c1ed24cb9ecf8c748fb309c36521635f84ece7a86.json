{"ast":null,"code":"var _jsxFileName = \"/Users/jeongeum/Documents/GitHub/React-Todo/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useCallback } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nimport CreateTodo from \"./components/CreateTodo\";\nimport TodoContainer from \"./components/TodoContainer\";\nimport TodoList from \"./components/TodoList\";\nimport TodoTitle from \"./components/TodoTitle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GlobalStyle = createGlobalStyle`\n${reset}\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\nbackground-color: aliceblue;\n}\n`;\n_c = GlobalStyle;\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([{\n    id: 1,\n    text: \"리액트 hook 공부하기\",\n    checked: false\n  }, {\n    id: 2,\n    text: \"리액트 투두리스트 마무리하기\",\n    checked: false\n  }]);\n  const nextId = useRef(3);\n  const onCreate = useCallback(text => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false\n    };\n    setTodos(todos.concat(todo));\n    nextId.current++;\n  }, [todos]);\n  const onToggle = useCallback(id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      checked: !todo.checked\n    } : todo));\n  }, [todos]);\n  console.log(todos);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TodoTitle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos,\n        onToggle: onToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreateTodo, {\n        onCreate: onCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"9JI/9Htn+dkLIvXL8CQNibRDk38=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","useRef","useCallback","createGlobalStyle","reset","CreateTodo","TodoContainer","TodoList","TodoTitle","GlobalStyle","App","todos","setTodos","id","text","checked","nextId","onCreate","todo","current","concat","onToggle","map","console","log"],"sources":["/Users/jeongeum/Documents/GitHub/React-Todo/my-app/src/App.js"],"sourcesContent":["import { useState, useRef, useCallback } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nimport CreateTodo from \"./components/CreateTodo\";\nimport TodoContainer from \"./components/TodoContainer\";\nimport TodoList from \"./components/TodoList\";\nimport TodoTitle from \"./components/TodoTitle\";\n\nconst GlobalStyle = createGlobalStyle`\n${reset}\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\nbackground-color: aliceblue;\n}\n`;\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      text: \"리액트 hook 공부하기\",\n      checked: false,\n    },\n    {\n      id: 2,\n      text: \"리액트 투두리스트 마무리하기\",\n      checked: false,\n    },\n  ]);\n\n  const nextId = useRef(3);\n  const onCreate = useCallback(\n    (text) => {\n      const todo = {\n        id: nextId.current,\n        text,\n        checked: false,\n      };\n      setTodos(todos.concat(todo));\n      nextId.current++;\n    },\n    [todos]\n  );\n\n  const onToggle = useCallback(\n    (id) => {\n      setTodos(\n        todos.map((todo) =>\n          todo.id === id ? { ...todo, checked: !todo.checked } : todo\n        )\n      );\n    },\n    [todos]\n  );\n  console.log(todos);\n  return (\n    <>\n      <GlobalStyle />\n      <TodoContainer>\n        <TodoTitle />\n        <TodoList todos={todos} onToggle={onToggle} />\n        <CreateTodo onCreate={onCreate} />\n      </TodoContainer>\n    </>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACrD,SAASC,iBAAiB,QAAQ,mBAAmB;AACrD,OAAOC,KAAK,MAAM,cAAc;AAChC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,wBAAwB;AAAC;AAAA;AAE/C,MAAMC,WAAW,GAAGN,iBAAkB;AACtC,EAAEC,KAAM;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,KAVIK,WAAW;AAYjB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,CACjC;IACEa,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,eAAe;IACrBC,OAAO,EAAE;EACX,CAAC,EACD;IACEF,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,iBAAiB;IACvBC,OAAO,EAAE;EACX,CAAC,CACF,CAAC;EAEF,MAAMC,MAAM,GAAGf,MAAM,CAAC,CAAC,CAAC;EACxB,MAAMgB,QAAQ,GAAGf,WAAW,CACzBY,IAAI,IAAK;IACR,MAAMI,IAAI,GAAG;MACXL,EAAE,EAAEG,MAAM,CAACG,OAAO;MAClBL,IAAI;MACJC,OAAO,EAAE;IACX,CAAC;IACDH,QAAQ,CAACD,KAAK,CAACS,MAAM,CAACF,IAAI,CAAC,CAAC;IAC5BF,MAAM,CAACG,OAAO,EAAE;EAClB,CAAC,EACD,CAACR,KAAK,CAAC,CACR;EAED,MAAMU,QAAQ,GAAGnB,WAAW,CACzBW,EAAE,IAAK;IACND,QAAQ,CACND,KAAK,CAACW,GAAG,CAAEJ,IAAI,IACbA,IAAI,CAACL,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGK,IAAI;MAAEH,OAAO,EAAE,CAACG,IAAI,CAACH;IAAQ,CAAC,GAAGG,IAAI,CAC5D,CACF;EACH,CAAC,EACD,CAACP,KAAK,CAAC,CACR;EACDY,OAAO,CAACC,GAAG,CAACb,KAAK,CAAC;EAClB,oBACE;IAAA,wBACE,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACf,QAAC,aAAa;MAAA,wBACZ,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eACb,QAAC,QAAQ;QAAC,KAAK,EAAEA,KAAM;QAAC,QAAQ,EAAEU;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eAC9C,QAAC,UAAU;QAAC,QAAQ,EAAEJ;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACpB;EAAA,gBACf;AAEP;AAAC,GAjDQP,GAAG;AAAA,MAAHA,GAAG;AAkDZ,eAAeA,GAAG;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}